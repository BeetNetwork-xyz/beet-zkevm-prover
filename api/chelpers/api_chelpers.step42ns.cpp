#include "goldilocks_cubic_extension.hpp"
#include "zhInv.hpp"
#include "starks.hpp"
#include "constant_pols_starks.hpp"
#include "api_steps.hpp"

void APISteps::step42ns_first(StepsParams &params, uint64_t i) {
     Goldilocks::Element tmp_0;
     Goldilocks::sub(tmp_0, params.pols[6145 + ((i + 2)%2048)*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_1;
     Goldilocks::sub(tmp_1, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_2;
     Goldilocks::mul(tmp_2, tmp_0, tmp_1);
     Goldilocks::Element tmp_25;
     Goldilocks::sub(tmp_25, tmp_2, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_3;
     Goldilocks::sub(tmp_3, params.pols[6144 + ((i + 2)%2048)*2], params.pols[10240 + i*1]);
     Goldilocks::Element tmp_4;
     Goldilocks::sub(tmp_4, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_5;
     Goldilocks::mul(tmp_5, tmp_3, tmp_4);
     Goldilocks::Element tmp_26;
     Goldilocks::sub(tmp_26, tmp_5, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_6;
     Goldilocks::sub(tmp_6, params.pols[6145 + i*2], params.publicInputs[0]);
     Goldilocks::Element tmp_7;
     Goldilocks::mul(tmp_7, params.pConstPols2ns->getElement(0,i), tmp_6);
     Goldilocks::Element tmp_27;
     Goldilocks::sub(tmp_27, tmp_7, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_8;
     Goldilocks::sub(tmp_8, params.pols[6144 + i*2], params.publicInputs[1]);
     Goldilocks::Element tmp_9;
     Goldilocks::mul(tmp_9, params.pConstPols2ns->getElement(0,i), tmp_8);
     Goldilocks::Element tmp_28;
     Goldilocks::sub(tmp_28, tmp_9, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_10;
     Goldilocks::sub(tmp_10, params.pols[6144 + i*2], params.publicInputs[2]);
     Goldilocks::Element tmp_11;
     Goldilocks::mul(tmp_11, params.pConstPols2ns->getElement(1,i), tmp_10);
     Goldilocks::Element tmp_29;
     Goldilocks::sub(tmp_29, tmp_11, Goldilocks::fromU64(0ULL));
     Goldilocks3::Element tmp_12;
     Goldilocks3::mul(tmp_12, tmp_25, (Goldilocks3::Element &)*params.challenges[4]);
     Goldilocks3::Element tmp_13;
     Goldilocks3::add(tmp_13, tmp_26, tmp_12);
     Goldilocks3::Element tmp_14;
     Goldilocks3::mul(tmp_14, (Goldilocks3::Element &)*params.challenges[4], tmp_13);
     Goldilocks3::Element tmp_15;
     Goldilocks3::add(tmp_15, tmp_27, tmp_14);
     Goldilocks3::Element tmp_16;
     Goldilocks3::mul(tmp_16, (Goldilocks3::Element &)*params.challenges[4], tmp_15);
     Goldilocks3::Element tmp_17;
     Goldilocks3::add(tmp_17, tmp_28, tmp_16);
     Goldilocks3::Element tmp_18;
     Goldilocks3::mul(tmp_18, (Goldilocks3::Element &)*params.challenges[4], tmp_17);
     Goldilocks3::Element tmp_19;
     Goldilocks3::add(tmp_19, tmp_29, tmp_18);
     Goldilocks3::Element tmp_20;
     Goldilocks3::mul(tmp_20, (Goldilocks3::Element &)*params.challenges[4], tmp_19);
     Goldilocks::Element tmp_21;
     Goldilocks::mul(tmp_21, params.pols[6144 + i*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_22;
     Goldilocks::mul(tmp_22, params.pols[6145 + i*2], params.pols[6145 + i*2]);
     Goldilocks::Element tmp_23;
     Goldilocks::add(tmp_23, tmp_21, tmp_22);
     Goldilocks::Element tmp_24;
     Goldilocks::sub(tmp_24, tmp_23, params.pols[10240 + i*1]);
     Goldilocks3::Element tmp_30;
     Goldilocks3::add(tmp_30, tmp_24, tmp_20);
     Goldilocks3::mul((Goldilocks3::Element &)(params.q_2ns[i * 3]), params.zi.zhInv(i), tmp_30);
}

void APISteps::step42ns_i(StepsParams &params, uint64_t i) {
     Goldilocks::Element tmp_0;
     Goldilocks::sub(tmp_0, params.pols[6145 + ((i + 2)%2048)*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_1;
     Goldilocks::sub(tmp_1, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_2;
     Goldilocks::mul(tmp_2, tmp_0, tmp_1);
     Goldilocks::Element tmp_25;
     Goldilocks::sub(tmp_25, tmp_2, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_3;
     Goldilocks::sub(tmp_3, params.pols[6144 + ((i + 2)%2048)*2], params.pols[10240 + i*1]);
     Goldilocks::Element tmp_4;
     Goldilocks::sub(tmp_4, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_5;
     Goldilocks::mul(tmp_5, tmp_3, tmp_4);
     Goldilocks::Element tmp_26;
     Goldilocks::sub(tmp_26, tmp_5, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_6;
     Goldilocks::sub(tmp_6, params.pols[6145 + i*2], params.publicInputs[0]);
     Goldilocks::Element tmp_7;
     Goldilocks::mul(tmp_7, params.pConstPols2ns->getElement(0,i), tmp_6);
     Goldilocks::Element tmp_27;
     Goldilocks::sub(tmp_27, tmp_7, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_8;
     Goldilocks::sub(tmp_8, params.pols[6144 + i*2], params.publicInputs[1]);
     Goldilocks::Element tmp_9;
     Goldilocks::mul(tmp_9, params.pConstPols2ns->getElement(0,i), tmp_8);
     Goldilocks::Element tmp_28;
     Goldilocks::sub(tmp_28, tmp_9, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_10;
     Goldilocks::sub(tmp_10, params.pols[6144 + i*2], params.publicInputs[2]);
     Goldilocks::Element tmp_11;
     Goldilocks::mul(tmp_11, params.pConstPols2ns->getElement(1,i), tmp_10);
     Goldilocks::Element tmp_29;
     Goldilocks::sub(tmp_29, tmp_11, Goldilocks::fromU64(0ULL));
     Goldilocks3::Element tmp_12;
     Goldilocks3::mul(tmp_12, tmp_25, (Goldilocks3::Element &)*params.challenges[4]);
     Goldilocks3::Element tmp_13;
     Goldilocks3::add(tmp_13, tmp_26, tmp_12);
     Goldilocks3::Element tmp_14;
     Goldilocks3::mul(tmp_14, (Goldilocks3::Element &)*params.challenges[4], tmp_13);
     Goldilocks3::Element tmp_15;
     Goldilocks3::add(tmp_15, tmp_27, tmp_14);
     Goldilocks3::Element tmp_16;
     Goldilocks3::mul(tmp_16, (Goldilocks3::Element &)*params.challenges[4], tmp_15);
     Goldilocks3::Element tmp_17;
     Goldilocks3::add(tmp_17, tmp_28, tmp_16);
     Goldilocks3::Element tmp_18;
     Goldilocks3::mul(tmp_18, (Goldilocks3::Element &)*params.challenges[4], tmp_17);
     Goldilocks3::Element tmp_19;
     Goldilocks3::add(tmp_19, tmp_29, tmp_18);
     Goldilocks3::Element tmp_20;
     Goldilocks3::mul(tmp_20, (Goldilocks3::Element &)*params.challenges[4], tmp_19);
     Goldilocks::Element tmp_21;
     Goldilocks::mul(tmp_21, params.pols[6144 + i*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_22;
     Goldilocks::mul(tmp_22, params.pols[6145 + i*2], params.pols[6145 + i*2]);
     Goldilocks::Element tmp_23;
     Goldilocks::add(tmp_23, tmp_21, tmp_22);
     Goldilocks::Element tmp_24;
     Goldilocks::sub(tmp_24, tmp_23, params.pols[10240 + i*1]);
     Goldilocks3::Element tmp_30;
     Goldilocks3::add(tmp_30, tmp_24, tmp_20);
     Goldilocks3::mul((Goldilocks3::Element &)(params.q_2ns[i * 3]), params.zi.zhInv(i), tmp_30);
}

void APISteps::step42ns_last(StepsParams &params, uint64_t i) {
     Goldilocks::Element tmp_0;
     Goldilocks::sub(tmp_0, params.pols[6145 + ((i + 2)%2048)*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_1;
     Goldilocks::sub(tmp_1, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_2;
     Goldilocks::mul(tmp_2, tmp_0, tmp_1);
     Goldilocks::Element tmp_25;
     Goldilocks::sub(tmp_25, tmp_2, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_3;
     Goldilocks::sub(tmp_3, params.pols[6144 + ((i + 2)%2048)*2], params.pols[10240 + i*1]);
     Goldilocks::Element tmp_4;
     Goldilocks::sub(tmp_4, Goldilocks::fromU64(1ULL), params.pConstPols2ns->getElement(1,i));
     Goldilocks::Element tmp_5;
     Goldilocks::mul(tmp_5, tmp_3, tmp_4);
     Goldilocks::Element tmp_26;
     Goldilocks::sub(tmp_26, tmp_5, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_6;
     Goldilocks::sub(tmp_6, params.pols[6145 + i*2], params.publicInputs[0]);
     Goldilocks::Element tmp_7;
     Goldilocks::mul(tmp_7, params.pConstPols2ns->getElement(0,i), tmp_6);
     Goldilocks::Element tmp_27;
     Goldilocks::sub(tmp_27, tmp_7, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_8;
     Goldilocks::sub(tmp_8, params.pols[6144 + i*2], params.publicInputs[1]);
     Goldilocks::Element tmp_9;
     Goldilocks::mul(tmp_9, params.pConstPols2ns->getElement(0,i), tmp_8);
     Goldilocks::Element tmp_28;
     Goldilocks::sub(tmp_28, tmp_9, Goldilocks::fromU64(0ULL));
     Goldilocks::Element tmp_10;
     Goldilocks::sub(tmp_10, params.pols[6144 + i*2], params.publicInputs[2]);
     Goldilocks::Element tmp_11;
     Goldilocks::mul(tmp_11, params.pConstPols2ns->getElement(1,i), tmp_10);
     Goldilocks::Element tmp_29;
     Goldilocks::sub(tmp_29, tmp_11, Goldilocks::fromU64(0ULL));
     Goldilocks3::Element tmp_12;
     Goldilocks3::mul(tmp_12, tmp_25, (Goldilocks3::Element &)*params.challenges[4]);
     Goldilocks3::Element tmp_13;
     Goldilocks3::add(tmp_13, tmp_26, tmp_12);
     Goldilocks3::Element tmp_14;
     Goldilocks3::mul(tmp_14, (Goldilocks3::Element &)*params.challenges[4], tmp_13);
     Goldilocks3::Element tmp_15;
     Goldilocks3::add(tmp_15, tmp_27, tmp_14);
     Goldilocks3::Element tmp_16;
     Goldilocks3::mul(tmp_16, (Goldilocks3::Element &)*params.challenges[4], tmp_15);
     Goldilocks3::Element tmp_17;
     Goldilocks3::add(tmp_17, tmp_28, tmp_16);
     Goldilocks3::Element tmp_18;
     Goldilocks3::mul(tmp_18, (Goldilocks3::Element &)*params.challenges[4], tmp_17);
     Goldilocks3::Element tmp_19;
     Goldilocks3::add(tmp_19, tmp_29, tmp_18);
     Goldilocks3::Element tmp_20;
     Goldilocks3::mul(tmp_20, (Goldilocks3::Element &)*params.challenges[4], tmp_19);
     Goldilocks::Element tmp_21;
     Goldilocks::mul(tmp_21, params.pols[6144 + i*2], params.pols[6144 + i*2]);
     Goldilocks::Element tmp_22;
     Goldilocks::mul(tmp_22, params.pols[6145 + i*2], params.pols[6145 + i*2]);
     Goldilocks::Element tmp_23;
     Goldilocks::add(tmp_23, tmp_21, tmp_22);
     Goldilocks::Element tmp_24;
     Goldilocks::sub(tmp_24, tmp_23, params.pols[10240 + i*1]);
     Goldilocks3::Element tmp_30;
     Goldilocks3::add(tmp_30, tmp_24, tmp_20);
     Goldilocks3::mul((Goldilocks3::Element &)(params.q_2ns[i * 3]), params.zi.zhInv(i), tmp_30);
}
